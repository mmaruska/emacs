# -*- Makefile -*- for GNU Emacs on the Microsoft W32 API.
# Copyright (C) 2000-2011  Free Software Foundation, Inc.

# This file is part of GNU Emacs.

# GNU Emacs is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# GNU Emacs is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.


ALL = emacs

.PHONY: $(ALL)

# Set EMACSLOADPATH correctly (in case already defined in environment).
EMACSLOADPATH=$(CURDIR)/../lisp

#
# HAVE_CONFIG_H is required by some generic gnu sources stuck into
# the emacs source tree.
#
LOCAL_FLAGS     = -Demacs=1 -DHAVE_CONFIG_H -I../lib -I../nt/inc -DHAVE_NTGUI=1 $(EMACS_EXTRA_C_FLAGS)

SRC             = .
EMACS           = $(BLD)/emacs.exe
TEMACS          = $(BLD)/temacs.exe
TEMACS_TMP      = $(BLD)/temacs.bin
TLIB0           = $(BLD)/temacs0.$(A)
TLIB1           = $(BLD)/temacs1.$(A)
TLIB2           = $(BLD)/temacs2.$(A)
TOBJ            = $(BLD)/firstfile.$(O)
TRES		= $(BLD)/emacs.res
TLASTLIB	= $(BLD)/lastfile.$(A)
GNULIB		= ../lib/$(BLD)/libgnu.$(A)

DOC		= $(OBJDIR)/etc/DOC-X

FULL_LINK_FLAGS = $(LINK_FLAGS) $(TEMACS_EXTRA_LINK)

#
# Split up the objects into two sets so that we don't run out of
# command line space when we link them into a library.
#
# Put emacs.$(O) in a separate lib, since we need to have firstfile.$(O)
# as the "main" object file when linking.
#
OBJ0 =  $(BLD)/emacs.$(O)

OBJ1 =  $(BLD)/alloc.$(O)		\
	$(BLD)/atimer.$(O)		\
	$(BLD)/buffer.$(O)		\
	$(BLD)/bytecode.$(O)		\
	$(BLD)/callint.$(O)		\
	$(BLD)/callproc.$(O)		\
	$(BLD)/casefiddle.$(O)		\
	$(BLD)/cmds.$(O)		\
	$(BLD)/data.$(O)		\
	$(BLD)/dired.$(O)		\
	$(BLD)/dispnew.$(O)		\
	$(BLD)/doc.$(O)			\
	$(BLD)/doprnt.$(O)		\
	$(BLD)/editfns.$(O)		\
	$(BLD)/eval.$(O)		\
	$(BLD)/fileio.$(O)		\
	$(BLD)/filelock.$(O)		\
	$(BLD)/fns.$(O)			\
	$(BLD)/indent.$(O)		\
	$(BLD)/insdel.$(O)		\
	$(BLD)/keyboard.$(O)		\
	$(BLD)/keymap.$(O)		\
	$(BLD)/lread.$(O)		\
	$(BLD)/macros.$(O)		\
	$(BLD)/marker.$(O)		\
	$(BLD)/minibuf.$(O)		\
	$(BLD)/w32.$(O)			\
	$(BLD)/w32heap.$(O)		\
	$(BLD)/w32inevt.$(O)		\
	$(BLD)/w32proc.$(O)		\
	$(BLD)/w32console.$(O)		\
	$(BLD)/print.$(O)		\
	$(BLD)/process.$(O)		\
	$(BLD)/regex.$(O)		\
	$(BLD)/scroll.$(O)		\
	$(BLD)/search.$(O)		\
	$(BLD)/sound.$(O)		\
	$(BLD)/syntax.$(O)

OBJ2 =  $(BLD)/sysdep.$(O)		\
	$(BLD)/term.$(O)		\
	$(BLD)/tparam.$(O)		\
	$(BLD)/undo.$(O)		\
	$(BLD)/unexw32.$(O)		\
	$(BLD)/window.$(O)		\
	$(BLD)/xdisp.$(O)		\
	$(BLD)/casetab.$(O)		\
	$(BLD)/floatfns.$(O)		\
	$(BLD)/frame.$(O)		\
	$(BLD)/gmalloc.$(O)		\
	$(BLD)/gnutls.$(O)		\
	$(BLD)/intervals.$(O)		\
	$(BLD)/composite.$(O)		\
	$(BLD)/ralloc.$(O)		\
	$(BLD)/textprop.$(O)		\
	$(BLD)/vm-limit.$(O)		\
	$(BLD)/region-cache.$(O)	\
	$(BLD)/bidi.$(O)		\
	$(BLD)/charset.$(O)		\
	$(BLD)/character.$(O)		\
	$(BLD)/chartab.$(O)		\
	$(BLD)/coding.$(O)		\
	$(BLD)/category.$(O)		\
	$(BLD)/ccl.$(O)			\
	$(BLD)/font.$(O)		\
	$(BLD)/fontset.$(O)		\
	$(BLD)/fringe.$(O)		\
	$(BLD)/image.$(O)		\
	$(BLD)/terminal.$(O)            \
	$(BLD)/menu.$(O)		\
	$(BLD)/w32term.$(O)		\
	$(BLD)/w32xfns.$(O)		\
	$(BLD)/w32fns.$(O)		\
	$(BLD)/xfaces.$(O)		\
	$(BLD)/w32select.$(O)		\
	$(BLD)/w32menu.$(O)		\
	$(BLD)/w32reg.$(O)		\
	$(BLD)/w32font.$(O)		\
	$(BLD)/w32uniscribe.$(O)

LIBS =  $(TLIB0)	\
	$(TLIB1)	\
	$(TLIB2)	\
	$(TLASTLIB)	\
	$(GNULIB)	\
	$(WINMM)	\
	$(ADVAPI32)	\
	$(GDI32)	\
	$(COMDLG32)	\
	$(USER32)	\
	$(MPR)		\
	$(SHELL32)	\
	$(WINSPOOL)	\
	$(OLE32)	\
	$(COMCTL32)	\
	$(UNISCRIBE)    \
	$(USER_LIBS)    \
	$(libc)

#
# Build the executable and dump it.
#
all:            $(ALL)

#
# The dumped executable
#
emacs:          stamp_BLD $(EMACS)
$(EMACS):       $(DOC) $(TEMACS)
	"$(THISDIR)/$(BLD)/temacs.exe" -batch -l loadup dump
	-"$(THISDIR)/$(BLD)/emacs.exe" -batch -f list-load-path-shadows

#
# The undumped executable
# Note the extra post-link step to insert a static preload heap section.
# If preload runs out of memory, increase the last argument to addsection
# (it is the preload heap size in MB).
#
temacs:         stamp_BLD $(TEMACS)
$(TEMACS):      $(TLIB0) $(TLIB1) $(TLIB2) $(TLASTLIB) $(TOBJ) $(TRES) \
		  ../nt/$(BLD)/addsection.exe $(GNULIB)
	$(LINK) $(LINK_OUT)$(TEMACS_TMP) $(FULL_LINK_FLAGS) $(TOBJ) $(TRES) $(LIBS)
	"../nt/$(BLD)/addsection" "$(TEMACS_TMP)" "$(TEMACS)" EMHEAP 21

# These omit firstfile.${O}, but there's no documentation in there
# anyways.
buildobj.h: $(SRC)/makefile.w32-in
	$(MAKE) $(MFLAGS) make-buildobj-$(SHELLTYPE)

# Cannot have blanks between the backslash and the redirection
# characters, because CMD's `echo' will put them in buildobj.h.
make-buildobj-CMD:
	echo #define BUILDOBJ ^"\> buildobj.h
	echo $(OBJ0)            \>> buildobj.h
	echo $(OBJ1)            \>> buildobj.h
	echo $(OBJ2)            \>> buildobj.h
	echo ^">> buildobj.h

# "
# The above line is here to countermand the single quote
# on the last "echo" command above, wrt font-lock.
make-buildobj-SH:
	echo '#define BUILDOBJ $(DQUOTE)\'  > buildobj.h
	echo $(OBJ0)                   '\' >> buildobj.h
	echo $(OBJ1)                   '\' >> buildobj.h
	echo $(OBJ2)                   '\' >> buildobj.h
	echo '$(DQUOTE)'                   >> buildobj.h

GLOBAL_SOURCES =   dosfns.c msdos.c \
	xterm.c xfns.c xmenu.c xselect.c xrdb.c xsmfns.c fringe.c image.c \
	fontset.c menu.c dbusbind.c \
	w32.c w32console.c w32fns.c w32heap.c w32inevt.c \
	w32menu.c w32proc.c w32reg.c w32select.c w32term.c w32xfns.c \
	font.c w32font.c w32uniscribe.c \
	dispnew.c frame.c scroll.c xdisp.c window.c bidi.c \
	charset.c coding.c category.c ccl.c character.c chartab.c \
	cm.c term.c terminal.c xfaces.c \
	emacs.c keyboard.c macros.c keymap.c sysdep.c \
	buffer.c filelock.c insdel.c marker.c \
	minibuf.c fileio.c dired.c \
	cmds.c casetab.c casefiddle.c indent.c search.c regex.c undo.c \
	alloc.c data.c doc.c editfns.c callint.c \
	eval.c floatfns.c fns.c print.c lread.c \
	syntax.c bytecode.c \
	process.c callproc.c unexw32.c \
	region-cache.c sound.c atimer.c \
	doprnt.c intervals.c textprop.c composite.c
SOME_MACHINE_OBJECTS = dosfns.o msdos.o \
	xterm.o xfns.o xmenu.o xselect.o xrdb.o xsmfns.o dbusbind.o
obj = $(GLOBAL_SOURCES:.c=.o)

globals.h: gl-stamp
	@cmd /c rem true

gl-stamp: ../lib-src/$(BLD)/make-docfile.exe $(GLOBAL_SOURCES)
	- $(DEL) gl-tmp
	"../lib-src/$(BLD)/make-docfile" -d . -g $(SOME_MACHINE_OBJECTS) $(obj) > gl-tmp
	cmd /c "fc /b gl-tmp globals.h >nul 2>&1 || $(CP) gl-tmp globals.h"
	- $(DEL) gl-tmp
	echo timestamp > $@

bootstrap: bootstrap-emacs

#
# Build a temacs with a sufficiently large PURESIZE to load the
# Lisp files from loadup.el in source form.
#
# WARNING: Do NOT split the part inside $(ARGQUOTE)s into multiple lines as
#          this can break with GNU Make 3.81 and later if sh.exe is used.
bootstrap-temacs-CMD:
	$(MAKE) $(MFLAGS) $(XMFLAGS) temacs CFLAGS=$(ARGQUOTE)$(ESC_CFLAGS) -DPURESIZE=5000000$(ARGQUOTE)

bootstrap-temacs-SH:
	$(MAKE) $(MFLAGS) $(XMFLAGS) temacs CFLAGS=$(ARGQUOTE)$(CFLAGS) -DPURESIZE=5000000$(ARGQUOTE)

bootstrap-temacs:
	$(MAKE) $(MFLAGS) bootstrap-temacs-$(SHELLTYPE)

#
# Dump an Emacs executable named bootstrap-emacs containing the
# files from loadup.el in source form.
#
bootstrap-emacs: bootstrap-temacs
	"$(THISDIR)/$(BLD)/temacs.exe" -batch -l loadup bootstrap
	- mkdir "../bin"
	$(CP) $(EMACS) ../bin

#
# Force recompile of files that depend on PURESIZE
#
bootstrap-clean:
	- $(DEL) $(BLD)/alloc.$(O)
	- $(DEL) $(BLD)/data.$(O)
	- $(DEL) $(BLD)/intervals.$(O)
	- $(DEL) $(BLD)/keyboard.$(O)
	- $(DEL) $(BLD)/keymap.$(O)

#
# The resource file.  NT 3.10 requires the use of cvtres; even though
# it is not necessary on later versions, it is still ok to use it.
#
$(TRES): ../nt/emacs.rc stamp_BLD
	$(RC) $(RC_INCLUDE)../nt $(RC_OUT)$@ ../nt/emacs.rc

#
# Build the library.  Split up the build into two phases...otherwise we
# run out of command line space.
#
$(TLIB0):       $(OBJ0)
	- $(DEL) $@
	$(AR) $(AR_OUT)$@ $(ALL_DEPS)
$(TLIB1):       $(OBJ1)
	- $(DEL) $@
	$(AR) $(AR_OUT)$@ $(ALL_DEPS)
$(TLIB2):	$(OBJ2)
	- $(DEL) $@
	$(AR) $(AR_OUT)$@ $(ALL_DEPS)

#
# Place lastfile.$(O) in its own library so that it can be loaded after
# the source libraries but before any system libraries.  Doing so defines
# the end of Emacs' data section portably across compilers and systems.
#
$(TLASTLIB):	$(BLD)/lastfile.$(O)
	- $(DEL) $@
	$(AR) $(AR_OUT)$@ $(ALL_DEPS)

#
# Assuming INSTALL_DIR is defined, build and install emacs in it.
#
install:        $(ALL)
	- mkdir "$(INSTALL_DIR)/bin"
	$(CP) $(EMACS) $(INSTALL_DIR)/bin

#
# Maintenance
#
# We used to delete *~, s/*~, m/*~ here, but that might inadvertently
# remove precious files if it happens to match their short 8+3 aliases.
clean:
	- $(DEL) "s/*.h~" "m/*.h~"
	- $(DEL) $(COMPILER_TEMP_FILES)
	- $(DEL_TREE) $(OBJDIR)
	- $(DEL) stamp_BLD gl-stamp globals.h
	- $(DEL) buildobj.h

distclean:	cleanall
	- $(DEL) config.h epaths.h Makefile

maintainer-clean: distclean
	- $(DEL) TAGS

cleanall:	clean
	- $(DEL_TREE) obj
	- $(DEL_TREE) obj-spd
	- $(DEL_TREE) oo
	- $(DEL_TREE) oo-spd

## Arrange to make a tags table TAGS-LISP for ../lisp,
## plus TAGS for the C files, which includes ../lisp/TAGS by reference.
##
## This works only with GNU Make.

TAGS: $(OBJ0) $(OBJ1) $(OBJ2) $(CURDIR)/m/intel386.h $(CURDIR)/s/ms-w32.h
	$(MAKE) $(MFLAGS) TAGS-$(MAKETYPE)

TAGS-LISP: $(OBJ0) $(OBJ1) $(OBJ2)
	$(MAKE) $(MFLAGS) TAGS-LISP-$(MAKETYPE)

TAGS-gmake:
	../lib-src/$(BLD)/etags.exe --include=TAGS-LISP --include=../nt/TAGS \
	  --regex=@../nt/emacs-src.tags \
	  $(patsubst $(BLD)%.$(O),$(CURDIR)%.c,$(OBJ0))
	../lib-src/$(BLD)/etags.exe -a --regex=@../nt/emacs-src.tags \
	  $(patsubst $(BLD)%.$(O),$(CURDIR)%.c,$(OBJ1))
	../lib-src/$(BLD)/etags.exe -a --regex=@../nt/emacs-src.tags \
	  $(patsubst $(BLD)%.$(O),$(CURDIR)%.c,$(OBJ2)) \
	  $(CURDIR)/*.h $(CURDIR)/m/intel386.h $(CURDIR)/s/ms-w32.h

TAGS-nmake:
	echo This target is not supported with NMake
	exit -1

frc:
TAGS-LISP-gmake: frc
	$(MAKE) $(MFLAGS) -C ../lisp TAGS-LISP DEST=../src

TAGS-LISP-nmake:
	echo This target is not supported with NMake
	exit -1

../nt/TAGS: frc
	$(MAKE) $(MFLAGS) nt-TAGS-$(MAKETYPE)

nt-TAGS-gmake:
	$(MAKE) $(MFLAGS) -C ../nt TAGS

nt-TAGS-nmake:
	echo This target is not supported with NMake
	exit -1

full-tags: TAGS TAGS-LISP ../nt/TAGS
.PHONY: full-tags

### DEPENDENCIES ###

EMACS_ROOT = ..
CONFIG_H   = $(EMACS_ROOT)/src/s/ms-w32.h \
	     $(EMACS_ROOT)/src/m/intel386.h \
	     $(EMACS_ROOT)/src/config.h \
	     $(EMACS_ROOT)/nt/inc/sys/stat.h
LISP_H     = $(SRC)/lisp.h \
	     $(SRC)/globals.h \
	     $(EMACS_ROOT)/nt/inc/inttypes.h \
	     $(EMACS_ROOT)/nt/inc/stdint.h
PROCESS_H  = $(SRC)/process.h \
	     $(EMACS_ROOT)/nt/inc/unistd.h \
	     $(SRC)/gnutls.h

$(BLD)/alloc.$(O) : \
	$(SRC)/alloc.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(PROCESS_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/puresize.h \
	$(SRC)/syssignal.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/atimer.$(O) : \
	$(SRC)/atimer.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/syssignal.h \
	$(SRC)/systime.h

$(BLD)/bidi.$(O) : \
	$(SRC)/bidi.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/bidimirror.h \
	$(SRC)/biditype.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/dispextern.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h

$(BLD)/buffer.$(O) : \
	$(SRC)/buffer.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/param.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/indent.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/region-cache.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/bytecode.$(O) : \
	$(SRC)/bytecode.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/dispextern.h \
	$(SRC)/syntax.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/callint.$(O) : \
	$(SRC)/callint.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/callproc.$(O) : \
	$(SRC)/callproc.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/file.h \
	$(EMACS_ROOT)/nt/inc/sys/ioctl.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(PROCESS_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/epaths.h \
	$(SRC)/frame.h \
	$(SRC)/syssignal.h \
	$(SRC)/systime.h \
	$(SRC)/systty.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32.h \
	$(SRC)/w32gui.h

$(BLD)/casefiddle.$(O) : \
	$(SRC)/casefiddle.c \
	$(CONFIG_H) \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/keymap.h \
	$(SRC)/syntax.h

$(BLD)/casetab.$(O) : \
	$(SRC)/casetab.c \
	$(CONFIG_H) \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/character.h

$(BLD)/category.$(O) : \
	$(SRC)/category.c \
	$(CONFIG_H) \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/category.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/keymap.h

$(BLD)/ccl.$(O) : \
	$(SRC)/ccl.c \
	$(CONFIG_H) \
	$(LISP_H) \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h

$(BLD)/character.$(O) : \
	$(SRC)/character.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/lib/intprops.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/composite.h \
	$(SRC)/disptab.h

$(BLD)/charset.$(O) : \
	$(SRC)/charset.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/disptab.h

$(BLD)/chartab.$(O) : \
	$(SRC)/chartab.c \
	$(CONFIG_H) \
	$(LISP_H) \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/charset.h

$(BLD)/cmds.$(O) : \
	$(SRC)/cmds.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/syntax.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/coding.$(O) : \
	$(SRC)/coding.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/composite.$(O) : \
	$(SRC)/composite.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/font.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/data.$(O) : \
	$(SRC)/data.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/font.h \
	$(SRC)/frame.h \
	$(SRC)/keyboard.h \
	$(SRC)/puresize.h \
	$(SRC)/syssignal.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h

$(BLD)/dired.$(O) : \
	$(SRC)/dired.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/grp.h \
	$(EMACS_ROOT)/nt/inc/pwd.h \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/dir.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(EMACS_ROOT)/lib/filemode.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/ndir.h \
	$(SRC)/regex.h \
	$(SRC)/systime.h

$(BLD)/dispnew.$(O) : \
	$(SRC)/dispnew.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(PROCESS_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/cm.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/disptab.h \
	$(SRC)/frame.h \
	$(SRC)/indent.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/syssignal.h \
	$(SRC)/systime.h \
	$(SRC)/termchar.h \
	$(SRC)/termhooks.h \
	$(SRC)/termopts.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h \
	$(SRC)/window.h

$(BLD)/doc.$(O) : \
	$(SRC)/doc.c \
	$(CONFIG_H) \
	buildobj.h \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/file.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/systime.h

$(BLD)/doprnt.$(O) : \
	$(SRC)/doprnt.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(LISP_H) \
	$(SRC)/character.h

$(BLD)/editfns.$(O) : \
	$(SRC)/editfns.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/pwd.h \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(EMACS_ROOT)/lib/intprops.h \
	$(EMACS_ROOT)/lib/strftime.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/emacs.$(O) : \
	$(SRC)/emacs.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/file.h \
	$(EMACS_ROOT)/nt/inc/sys/ioctl.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(PROCESS_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/syssignal.h \
	$(SRC)/systime.h \
	$(SRC)/systty.h \
	$(SRC)/termhooks.h \
	$(SRC)/unexec.h \
	$(SRC)/w32.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32heap.h \
	$(SRC)/window.h

$(BLD)/eval.$(O) : \
	$(SRC)/eval.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/keyboard.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h

$(BLD)/fileio.$(O) : \
	$(SRC)/fileio.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/pwd.h \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/filelock.$(O) : \
	$(SRC)/filelock.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/pwd.h \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/file.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/systime.h

$(BLD)/firstfile.$(O) : \
	$(SRC)/firstfile.c \
	$(CONFIG_H)

$(BLD)/floatfns.$(O) : \
	$(SRC)/floatfns.c \
	$(CONFIG_H) \
	$(LISP_H) \
	$(SRC)/syssignal.h

$(BLD)/fns.$(O) : \
	$(SRC)/fns.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/langinfo.h \
	$(EMACS_ROOT)/nt/inc/nl_types.h \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(EMACS_ROOT)/lib/md5.h \
	$(EMACS_ROOT)/lib/sha1.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/font.$(O) : \
	$(SRC)/font.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/font.h \
	$(SRC)/fontset.h \
	$(SRC)/frame.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h \
	$(SRC)/window.h

$(BLD)/fontset.$(O) : \
	$(SRC)/fontset.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/font.h \
	$(SRC)/fontset.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h \
	$(SRC)/window.h

$(BLD)/frame.$(O) : \
	$(SRC)/frame.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/font.h \
	$(SRC)/fontset.h \
	$(SRC)/frame.h \
	$(SRC)/keyboard.h \
	$(SRC)/systime.h \
	$(SRC)/termchar.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h \
	$(SRC)/window.h

$(BLD)/fringe.$(O) : \
	$(SRC)/fringe.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/gmalloc.$(O) : \
	$(SRC)/gmalloc.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(SRC)/getpagesize.h

$(BLD)/gnutls.$(O) : \
	$(SRC)/gnutls.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(LISP_H) \
	$(PROCESS_H) \
	$(SRC)/w32.h

$(BLD)/image.$(O) : \
	$(SRC)/image.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/epaths.h \
	$(SRC)/font.h \
	$(SRC)/frame.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h \
	$(SRC)/window.h

$(BLD)/indent.$(O) : \
	$(SRC)/indent.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/category.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/disptab.h \
	$(SRC)/frame.h \
	$(SRC)/indent.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/region-cache.h \
	$(SRC)/systime.h \
	$(SRC)/termchar.h \
	$(SRC)/termopts.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/insdel.$(O) : \
	$(SRC)/insdel.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(EMACS_ROOT)/lib/intprops.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/intervals.h \
	$(SRC)/region-cache.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/intervals.$(O) : \
	$(SRC)/intervals.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(EMACS_ROOT)/lib/intprops.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/puresize.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h

$(BLD)/keyboard.$(O) : \
	$(SRC)/keyboard.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/ioctl.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(PROCESS_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/disptab.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/macros.h \
	$(SRC)/puresize.h \
	$(SRC)/syntax.h \
	$(SRC)/syssignal.h \
	$(SRC)/systime.h \
	$(SRC)/termchar.h \
	$(SRC)/termhooks.h \
	$(SRC)/termopts.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h \
	$(SRC)/window.h

$(BLD)/keymap.$(O) : \
	$(SRC)/keymap.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/puresize.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/lastfile.$(O) : \
	$(SRC)/lastfile.c \
	$(CONFIG_H)

$(BLD)/lread.$(O) : \
	$(SRC)/lread.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/file.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/epaths.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h

$(BLD)/macros.$(O) : \
	$(SRC)/macros.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/keyboard.h \
	$(SRC)/macros.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/marker.$(O) : \
	$(SRC)/marker.c \
	$(CONFIG_H) \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/character.h

$(BLD)/menu.$(O) : \
	$(SRC)/menu.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/menu.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h \
	$(SRC)/window.h

$(BLD)/minibuf.$(O) : \
	$(SRC)/minibuf.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/syntax.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/w32.$(O) : \
	$(SRC)/w32.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/grp.h \
	$(EMACS_ROOT)/nt/inc/pwd.h \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/file.h \
	$(EMACS_ROOT)/nt/inc/sys/socket.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(EMACS_ROOT)/lib/allocator.h \
	$(EMACS_ROOT)/lib/careadlinkat.h \
	$(LISP_H) \
	$(PROCESS_H) \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/ndir.h \
	$(SRC)/systime.h \
	$(SRC)/w32.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32heap.h

$(BLD)/w32heap.$(O) : \
	$(SRC)/w32heap.c \
	$(CONFIG_H) \
	$(LISP_H) \
	$(SRC)/w32heap.h

$(BLD)/w32inevt.$(O) : \
	$(SRC)/w32inevt.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/keyboard.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32heap.h \
	$(SRC)/w32term.h

$(BLD)/w32proc.$(O) : \
	$(SRC)/w32proc.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/langinfo.h \
	$(EMACS_ROOT)/nt/inc/nl_types.h \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/file.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(PROCESS_H) \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/syssignal.h \
	$(SRC)/systime.h \
	$(SRC)/syswait.h \
	$(SRC)/w32.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32heap.h \
	$(SRC)/w32term.h

$(BLD)/w32console.$(O) : \
	$(SRC)/w32console.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/disptab.h \
	$(SRC)/frame.h \
	$(SRC)/systime.h \
	$(SRC)/termchar.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32inevt.h

$(BLD)/print.$(O) : \
	$(SRC)/print.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(EMACS_ROOT)/lib/ftoastr.h \
	$(EMACS_ROOT)/lib/intprops.h \
	$(LISP_H) \
	$(PROCESS_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/font.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/systime.h \
	$(SRC)/termchar.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/process.$(O) : \
	$(SRC)/process.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/netdb.h \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/arpa/inet.h \
	$(EMACS_ROOT)/nt/inc/netinet/in.h \
	$(EMACS_ROOT)/nt/inc/sys/file.h \
	$(EMACS_ROOT)/nt/inc/sys/ioctl.h \
	$(EMACS_ROOT)/nt/inc/sys/socket.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(PROCESS_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/keyboard.h \
	$(SRC)/sysselect.h \
	$(SRC)/syssignal.h \
	$(SRC)/systime.h \
	$(SRC)/systty.h \
	$(SRC)/syswait.h \
	$(SRC)/termhooks.h \
	$(SRC)/termopts.h \
	$(SRC)/w32.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/ralloc.$(O) : \
	$(SRC)/ralloc.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/getpagesize.h \
	$(SRC)/systime.h

$(BLD)/regex.$(O) : \
	$(SRC)/regex.c \
	$(CONFIG_H) \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/category.h \
	$(SRC)/character.h \
	$(SRC)/regex.h \
	$(SRC)/syntax.h

$(BLD)/region-cache.$(O) : \
	$(SRC)/region-cache.c \
	$(CONFIG_H) \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/region-cache.h

$(BLD)/scroll.$(O) : \
	$(SRC)/scroll.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/keyboard.h \
	$(SRC)/systime.h \
	$(SRC)/termchar.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/search.$(O) : \
	$(SRC)/search.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/category.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/intervals.h \
	$(SRC)/regex.h \
	$(SRC)/region-cache.h \
	$(SRC)/syntax.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h

$(BLD)/sound.$(O) : \
	$(SRC)/sound.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/dispextern.h \
	$(SRC)/syssignal.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h

$(BLD)/syntax.$(O) : \
	$(SRC)/syntax.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/category.h \
	$(SRC)/character.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/intervals.h \
	$(SRC)/keymap.h \
	$(SRC)/regex.h \
	$(SRC)/syntax.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h

$(BLD)/sysdep.$(O) : \
	$(SRC)/sysdep.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/grp.h \
	$(EMACS_ROOT)/nt/inc/netdb.h \
	$(EMACS_ROOT)/nt/inc/pwd.h \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/file.h \
	$(EMACS_ROOT)/nt/inc/sys/ioctl.h \
	$(EMACS_ROOT)/nt/inc/sys/socket.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(EMACS_ROOT)/lib/allocator.h \
	$(EMACS_ROOT)/lib/careadlinkat.h \
	$(EMACS_ROOT)/lib/ignore-value.h \
	$(LISP_H) \
	$(PROCESS_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/cm.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/keyboard.h \
	$(SRC)/sysselect.h \
	$(SRC)/syssignal.h \
	$(SRC)/systime.h \
	$(SRC)/systty.h \
	$(SRC)/syswait.h \
	$(SRC)/termchar.h \
	$(SRC)/termhooks.h \
	$(SRC)/termopts.h \
	$(SRC)/w32.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/term.$(O) : \
	$(SRC)/term.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/file.h \
	$(EMACS_ROOT)/nt/inc/sys/ioctl.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/cm.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/disptab.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/syssignal.h \
	$(SRC)/systime.h \
	$(SRC)/systty.h \
	$(SRC)/termchar.h \
	$(SRC)/termhooks.h \
	$(SRC)/termopts.h \
	$(SRC)/tparam.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/terminal.$(O) : \
	$(SRC)/terminal.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/keyboard.h \
	$(SRC)/systime.h \
	$(SRC)/termchar.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h

$(BLD)/textprop.$(O) : \
	$(SRC)/textprop.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/intervals.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/tparam.$(O) : \
	$(SRC)/tparam.c \
	$(CONFIG_H) \
	$(LISP_H) \
	$(SRC)/tparam.h

$(BLD)/undo.$(O) : \
	$(SRC)/undo.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/buffer.h \
	$(SRC)/commands.h \
	$(SRC)/dispextern.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/window.h

$(BLD)/unexw32.$(O) : \
	$(SRC)/unexw32.c \
	$(CONFIG_H) \
	$(SRC)/unexec.h \
	$(SRC)/w32heap.h

$(BLD)/vm-limit.$(O) : \
	$(SRC)/vm-limit.c \
	$(CONFIG_H) \
	$(LISP_H) \
	$(SRC)/mem-limits.h

$(BLD)/window.$(O) : \
	$(SRC)/window.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/disptab.h \
	$(SRC)/frame.h \
	$(SRC)/indent.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/systime.h \
	$(SRC)/termchar.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h \
	$(SRC)/window.h

$(BLD)/xdisp.$(O) : \
	$(SRC)/xdisp.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(PROCESS_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/commands.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/disptab.h \
	$(SRC)/font.h \
	$(SRC)/fontset.h \
	$(SRC)/frame.h \
	$(SRC)/indent.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/macros.h \
	$(SRC)/region-cache.h \
	$(SRC)/systime.h \
	$(SRC)/termchar.h \
	$(SRC)/termhooks.h \
	$(SRC)/termopts.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h \
	$(SRC)/window.h

$(BLD)/xfaces.$(O) : \
	$(SRC)/xfaces.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/font.h \
	$(SRC)/fontset.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/systime.h \
	$(SRC)/termchar.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h \
	$(SRC)/window.h

$(BLD)/w32fns.$(O) : \
	$(SRC)/w32fns.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/epaths.h \
	$(SRC)/font.h \
	$(SRC)/fontset.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32.h \
	$(SRC)/w32font.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32heap.h \
	$(SRC)/w32term.h \
	$(SRC)/window.h

$(BLD)/w32menu.$(O) : \
	$(SRC)/w32menu.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/frame.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/menu.h \
	$(SRC)/systime.h \
	$(SRC)/termhooks.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h \
	$(SRC)/window.h

$(BLD)/w32term.$(O) : \
	$(SRC)/w32term.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/unistd.h \
	$(EMACS_ROOT)/nt/inc/sys/ioctl.h \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(PROCESS_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/buffer.h \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/disptab.h \
	$(SRC)/font.h \
	$(SRC)/fontset.h \
	$(SRC)/frame.h \
	$(SRC)/intervals.h \
	$(SRC)/keyboard.h \
	$(SRC)/keymap.h \
	$(SRC)/systime.h \
	$(SRC)/systty.h \
	$(SRC)/termchar.h \
	$(SRC)/termhooks.h \
	$(SRC)/termopts.h \
	$(SRC)/w32font.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32heap.h \
	$(SRC)/w32term.h \
	$(SRC)/window.h

$(BLD)/w32select.$(O) : \
	$(SRC)/w32select.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32heap.h \
	$(SRC)/w32term.h

$(BLD)/w32reg.$(O) : \
	$(SRC)/w32reg.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h

$(BLD)/w32xfns.$(O) : \
	$(SRC)/w32xfns.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/atimer.h \
	$(SRC)/blockinput.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/fontset.h \
	$(SRC)/frame.h \
	$(SRC)/keyboard.h \
	$(SRC)/systime.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h

$(BLD)/w32font.$(O) : \
	$(SRC)/w32font.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/coding.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/font.h \
	$(SRC)/fontset.h \
	$(SRC)/frame.h \
	$(SRC)/systime.h \
	$(SRC)/w32font.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h

$(BLD)/w32uniscribe.$(O) : \
	$(SRC)/w32uniscribe.c \
	$(CONFIG_H) \
	$(EMACS_ROOT)/nt/inc/sys/time.h \
	$(LISP_H) \
	$(SRC)/ccl.h \
	$(SRC)/character.h \
	$(SRC)/charset.h \
	$(SRC)/composite.h \
	$(SRC)/dispextern.h \
	$(SRC)/font.h \
	$(SRC)/fontset.h \
	$(SRC)/frame.h \
	$(SRC)/systime.h \
	$(SRC)/w32font.h \
	$(SRC)/w32gui.h \
	$(SRC)/w32term.h

# Each object file depends on stamp_BLD, because in parallel builds we must
# make sure $(BLD) exists before starting compilations.
#
$(OBJ0) $(OBJ1) $(OBJ2) $(BLD)/lastfile.$(O) $(BLD)/firstfile.$(O): stamp_BLD
